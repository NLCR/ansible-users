- name: Passwordless sudo is enabled for wheel group
  replace:
    dest: /etc/sudoers
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
    validate: 'visudo -cf %s'
  with_items:
    - { regexp: "^%wheel\tALL=[(]ALL[)]\tALL$", replace: "# %wheel\tALL=(ALL)\tALL" }
    - { regexp: "^# %wheel\tALL=[(]ALL[)]\tNOPASSWD: ALL$", replace: "%wheel\tALL=(ALL)\tNOPASSWD: ALL"}
    - { regexp: "^# %wheel ALL=[(]ALL[)] ALL$", replace: "%wheel ALL=(ALL) NOPASSWD: ALL"}

- name: Admins are part of wheel and users groups
  user:
    name: '{{ item.key }}'
    comment: '{{ item.value.name }}, {{ item.value.mail }}'
    uid: '{{ item.value.uid }}'
    append: yes
    groups: wheel,users
    non_unique: yes
  with_dict: '{{ admins }}'
  when: admins is defined

- name: Users are set and added to groups
  user:
    name: '{{ item.key }}'
    comment: '{{ item.value.name }}, {{ item.value.mail | default("Mail has not been provided") }}'
    uid: '{{ item.value.uid }}'
    append: yes
    groups: '{{ item.value.groups | default(omit) }}'
  with_dict: '{{ users }}'
  when: users is defined

- name: Admins SSH keys imported
  authorized_key:
    user: '{{ item.key }}'
    state: present
    key: '{{ item.value.key }} {{ item.value.mail }}'
  with_dict: '{{ admins }}'
  ignore_errors: '{{ ansible_check_mode }}'
  when: admins is defined

- name: Add private keys
  copy:
    src: '{{ item.value.private_key }}'
    dest: '/home/{{ item.key }}/.ssh/id_rsa'
    mode: 0600
    owner: '{{ item.key }}'
  with_dict: '{{ admins }}'
  when:
    - admins is defined
    - item.value.private_key is defined
